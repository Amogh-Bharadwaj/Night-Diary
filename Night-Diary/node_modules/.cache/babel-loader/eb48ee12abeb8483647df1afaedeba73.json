{"ast":null,"code":"var _jsxFileName = \"/home/amogh/Documents/VS Code/Night-Diary/src/entry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Flex, Stack, VStack, Text, FormControl, FormLabel, Input, InputGroup, InputLeftElement, Link, Button } from \"@chakra-ui/react\";\nimport { ArrowRightIcon, LockIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Entry = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const getName = e => {\n    setName(e.target.value); //console.log(\"Name\",name);\n  };\n\n  const getPass = e => {\n    setPass(e.target.value); //console.log(\"Pass\",pass);\n  };\n\n  const Login = () => {\n    // Sanity checks.\n    if (name.length == 0) {\n      setError(\"[ Please enter your name. ]\");\n    } else if (name.length > 50) {\n      setError(\"[ Username too long. ]\");\n    } else if (pass.length == 0) {\n      setError(\"[ Password cannot be empty. ]\");\n    } else if (pass.length > 100) {\n      setError(\"[ Password size overflow. ]\");\n    } else {\n      fetch(`/entry`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: name,\n          password: pass\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(json => {\n        let status = json.Status;\n\n        if (status == \"Successfully entered.\" || status == \"New user account created.\") {\n          navigate('/diary/' + name, {\n            state: {\n              Name: name\n            }\n          });\n        } else {\n          setError(status);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    w: \"100vw\",\n    h: \"100vh\",\n    align: \"center\",\n    bgColor: \"black\",\n    justify: \"center\",\n    bgGradient: \"linear(360deg, #232A33 ,black)\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      align: \"center\",\n      spacing: 6,\n      h: \"full\",\n      justify: \"center\",\n      textColor: \"whiteAlpha.100\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        textColor: \"blue.400\",\n        fontSize: {\n          base: \"2xl\",\n          md: \"4xl\"\n        },\n        my: 5,\n        children: \"Night Diary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textColor: \"blue.200\",\n        fontSize: {\n          base: \"sm\",\n          md: \"2xl\"\n        },\n        children: \"Your own safe space to let it all out.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        px: 5,\n        h: \"30%\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          my: 5,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            focusBorderColor: \"white\",\n            textColor: \"white\",\n            onChange: getName,\n            placeholder: \"Your name..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            focusBorderColor: \"white\",\n            textColor: \"white\",\n            onChange: getPass,\n            placeholder: \"Enter your password..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          h: \"20%\",\n          w: \"100%\",\n          onClick: Login,\n          bgColor: \"#093A53\",\n          textColor: \"whiteAlpha.600\",\n          _hover: {\n            bgColor: \"#0C3E66\"\n          },\n          boxShadow: \"0px 4px 4px #031A2D \",\n          _selected: {\n            bg: \"None\"\n          },\n          _active: {\n            bg: \"None\"\n          },\n          mt: 5,\n          mb: 7,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textColor: \"red.700\",\n        fontSize: \"2xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: 5,\n        px: 5,\n        textColor: \"#B5E1F8\",\n        children: [\"This site can't see your password. \", /*#__PURE__*/_jsxDEV(Link, {\n          textColor: \"#67C1EF\",\n          children: \"Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Entry, \"HLXMQSDoB4yVBZidfk4BkjtIy0A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Entry;\nexport default Entry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"sources":["/home/amogh/Documents/VS Code/Night-Diary/src/entry.jsx"],"names":["React","useState","useNavigate","Flex","Stack","VStack","Text","FormControl","FormLabel","Input","InputGroup","InputLeftElement","Link","Button","ArrowRightIcon","LockIcon","Entry","name","setName","pass","setPass","error","setError","navigate","getName","e","target","value","getPass","Login","length","fetch","method","body","JSON","stringify","username","password","headers","then","response","json","status","Status","state","Name","base","md","bgColor","bg"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\nimport { useNavigate } from \"react-router\";\nimport {\n    Flex,\n    Stack,\n    VStack,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    Button\n} from \"@chakra-ui/react\";\n\nimport{\n    ArrowRightIcon,\n    LockIcon,\n} from \"@chakra-ui/icons\"\n\nconst Entry=()=>{\n    const [name,setName] = useState(\"\");\n    const [pass,setPass] = useState(\"\");\n    const [error,setError]= useState(\"\");\n    const navigate= useNavigate();\n\n    const getName=(e)=>{\n        setName(e.target.value);\n        //console.log(\"Name\",name);\n    }\n\n    const getPass=(e)=>{\n        setPass(e.target.value);\n        //console.log(\"Pass\",pass);\n    }\n\n    const Login=()=>{\n\n      // Sanity checks.\n      if(name.length==0){\n        setError(\"[ Please enter your name. ]\");\n      }\n      \n      else if(name.length > 50){\n        setError(\"[ Username too long. ]\")\n      }\n\n      else if(pass.length==0){\n        setError(\"[ Password cannot be empty. ]\")\n      }\n\n      else if(pass.length>100){\n        setError(\"[ Password size overflow. ]\")\n      }\n\n      else{\n        fetch(\n          `/entry`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              username:name,\n              password:pass,\n            }),\n            headers: {\n             \"Content-type\": \"application/json\",\n          },\n          }\n        )\n          .then((response) => response.json())\n          .then((json) => {\n            let status = json.Status;\n            if(status==\"Successfully entered.\" || status==\"New user account created.\"){\n              navigate('/diary/'+name,{state:{Name:name}});\n            }\n            else{\n              setError(status);\n            }\n            \n          })\n\n      }\n    }\n\n    return(\n        <Flex \n          direction=\"column\"\n          w=\"100vw\"\n          h=\"100vh\"\n          align=\"center\"\n          bgColor=\"black\"\n          justify=\"center\"\n          bgGradient=\"linear(360deg, #232A33 ,black)\"\n        >\n            <VStack\n              align=\"center\"\n              spacing={6}\n              h=\"full\"\n              justify=\"center\"\n              textColor=\"whiteAlpha.100\"\n            >   \n\n                <Text\n                  textColor=\"blue.400\"\n                  fontSize={{base:\"2xl\",md:\"4xl\"}}\n                  my={5}\n                >\n                    Night Diary\n                </Text>\n\n                <Text\n                  textColor=\"blue.200\"\n                  fontSize={{base:\"sm\",md:\"2xl\"}}\n                >\n                    Your own safe space to let it all out.\n                </Text>\n\n                \n                  <FormControl \n                   px={5}\n                   h=\"30%\">\n                        <InputGroup my={5}>\n                        <InputLeftElement\n                          pointerEvents=\"none\"\n                          children={<ArrowRightIcon color=\"white\"/>}\n                        />\n                          \n                        \n                        <Input \n                        focusBorderColor=\"white\"\n                          textColor=\"white\"\n                          onChange={getName}\n                          placeholder=\"Your name..\"></Input>\n                        \n                        </InputGroup>\n\n                        <InputGroup>\n                         <InputLeftElement \n                           pointerEvents=\"none\"\n                           children={<LockIcon color=\"white\"/>}\n                           />\n                           <Input \n                            type=\"password\"\n                            focusBorderColor=\"white\"\n                            textColor=\"white\"\n                            onChange={getPass}\n                            placeholder=\"Enter your password..\" />\n\n                       \n                        </InputGroup>\n\n                        <Button\n                          h=\"20%\"\n                          w=\"100%\"\n                          onClick={Login}\n                          bgColor=\"#093A53\"\n                          textColor=\"whiteAlpha.600\"\n                          _hover={{bgColor:\"#0C3E66\"}}\n                          boxShadow=\"0px 4px 4px #031A2D \"\n                          _selected={{bg:\"None\"}}\n                          _active={{bg:\"None\"}}\n                          mt={5}\n                          mb={7}\n                        >\n                            <Text fontSize=\"lg\">Enter</Text>\n  \n                        </Button>\n                </FormControl>\n\n                <Text \n                 textColor=\"red.700\"\n                 fontSize=\"2xl\"\n                >\n                  {error}\n                </Text>\n              \n                <Text\n                 mt={5}\n                 px={5}\n                 textColor=\"#B5E1F8\"\n                >This site can't see your password. <Link textColor=\"#67C1EF\">Learn more.</Link></Text>\n\n\n            </VStack>\n          \n\n        </Flex>\n    )\n}\n\nexport default Entry;\n"]},"metadata":{},"sourceType":"module"}