{"ast":null,"code":"var _jsxFileName = \"/home/amogh/Documents/VS Code/ElectronApp/ui/src/diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { Flex, Box, Stack, VStack, Text, FormControl, FormLabel, Input, InputGroup, InputLeftElement, Link, Button, Textarea, Divider, Spinner } from \"@chakra-ui/react\";\nimport { ArrowRightIcon, LockIcon, Search2Icon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Diary = () => {\n  _s();\n\n  // States\n  const [myDiary, setDiary] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(\"none\");\n  const [title, setTitle] = useState(\"\");\n  const [searchQuery, setQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(\"\"); // Routing\n\n  const {\n    name\n  } = useParams();\n  const navigate = useNavigate();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const getDate = () => {\n    let dateObj = new Date();\n    let month = monthNames[dateObj.getMonth()];\n    let h = dateObj.getHours();\n    let m = dateObj.getMinutes();\n    let day = String(dateObj.getDate()).padStart(2, '0');\n    let year = dateObj.getFullYear();\n    let zero = \"\";\n    if (h == 0) zero = \"0\";\n    let output = month + ' ' + day + ',' + year + ' ' + zero + h + ':' + m;\n    return output;\n  };\n\n  const Open = (t, m) => {\n    setTitle(t);\n    setMessage(m);\n  };\n\n  const getTitle = e => {\n    setTitle(e.target.value);\n  };\n\n  const getMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const Clear = () => {\n    setMessage(\"\");\n  };\n\n  const Exit = () => {\n    navigate('/');\n  };\n\n  const Post = date => {\n    setLoading(\"block\");\n    fetch(`http://127.0.0.1:5000/new`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        message: message,\n        title: title,\n        time: date\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      let status = json.Status;\n\n      if (status == \"Successfully entered.\") {\n        console.log(\"Submit: \", status);\n      } else {\n        setError(status);\n      }\n\n      setLoading(\"none\");\n    });\n    setLoading(\"none\");\n  };\n\n  const Diaries = () => {\n    setLoading(\"block\");\n    fetch(`http://127.0.0.1:5000/diaries`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      let diaries = json.Diaries;\n      let i = 0;\n\n      for (i = 0; i < diaries.length; i++) {\n        let curr = diaries.length;\n        setDiary(prevDiary => [...prevDiary, [diaries[i].time, diaries[i].title, diaries[i].message]]);\n\n        while (diaries.length == curr);\n      }\n    });\n    setLoading(\"none\");\n  };\n\n  useEffect(() => {\n    Diaries();\n  }, [myDiary]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    w: \"full\",\n    align: \"center\",\n    justify: \"center\",\n    p: 10,\n    bgGradient: \"linear(360deg, #232A33 ,black)\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"5xl\",\n      textColor: \"white\",\n      my: 10,\n      children: [name, \"'s Entry\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      mt: 10,\n      mb: 5,\n      value: title,\n      fontSize: \"2xl\",\n      fontWeight: \"bold\",\n      textColor: \"#b1caf0\",\n      placeholder: \"Title...\",\n      onChange: getTitle,\n      w: \"full\",\n      h: \"8vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      w: \"full\",\n      h: \"60vh\",\n      bg: \"#292C2D\",\n      value: message,\n      focusBorderColor: \"#292C2D\",\n      border: \"none\",\n      _focus: {\n        boxShadow: \"0px 5px 5px black\"\n      },\n      onChange: getMessage,\n      boxShadow: \"0px 5px 5px black\",\n      fontSize: \"2xl\",\n      textColor: \"white\",\n      p: 10,\n      resize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"row\",\n      bgGradient: \"linear(#676579,#01101a)\",\n      align: \"center\",\n      justify: \"space-evenly\",\n      boxShadow: \"0px 5px 5px black\",\n      w: \"45%\",\n      h: \"10vh\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        w: \"15%\",\n        bgGradient: \"linear(green.500,green.700)\",\n        boxShadow: \"0px 5px 5px black\",\n        _hover: {\n          bgGradient: \"linear(green.700,green.800)\"\n        },\n        onClick: () => {\n          Post(getDate());\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          textColor: \"white\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        w: \"15%\",\n        bgGradient: \"linear(yellow.300,yellow.500)\",\n        boxShadow: \"0px 5px 5px black\",\n        _hover: {\n          bgGradient: \"linear(yellow,yellow.700)\"\n        },\n        onClick: Clear,\n        mx: 3,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          textColor: \"black\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        w: \"15%\",\n        bgGradient: \"linear(red.800,red.700)\",\n        boxShadow: \"0px 5px 5px black\",\n        _hover: {\n          bgGradient: \"linear(red.800,red.500)\"\n        },\n        onClick: Exit,\n        mx: 3,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          textColor: \"black\",\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      w: \"75%\",\n      mt: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      my: 7,\n      fontSize: \"5xl\",\n      textColor: \"white\",\n      children: \"My Diary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      mt: 10,\n      w: \"50%\",\n      h: \"50vh\",\n      overflowY: \"auto\",\n      css: {\n        '&::-webkit-scrollbar': {\n          width: '4px'\n        },\n        '&::-webkit-scrollbar-track': {\n          width: '6px'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          background: \"#3888ff\",\n          borderRadius: '24px'\n        }\n      },\n      children: [loading == \"none\" && myDiary.map(entry => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          w: \"full\",\n          h: \"20vh\",\n          boxShadow: \"0px 2px 2px white\",\n          textColor: \"white\",\n          bgGradient: \"linear(to-r,#2a3545,black)\",\n          p: 10,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"2xl\",\n            children: [entry[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 30\n            }, this), entry[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: \"15%\",\n            bgGradient: \"linear(green.300,green.700)\",\n            mt: 2,\n            _hover: {\n              bgGradient: \"linear(green.700,green.800)\"\n            },\n            onClick: () => {\n              Open(entry[1], entry[2]);\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"lg\",\n              textColor: \"white\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Spinner, {\n        thickness: \"4px\",\n        speed: \"0.65s\",\n        emptyColor: \"gray.200\",\n        color: \"blue.500\",\n        size: \"xl\",\n        display: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Diary, \"SM6WKFnrXEK1qNhFVYNu1VSygkE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/home/amogh/Documents/VS Code/ElectronApp/ui/src/diary.jsx"],"names":["React","useState","useEffect","useNavigate","useParams","Flex","Box","Stack","VStack","Text","FormControl","FormLabel","Input","InputGroup","InputLeftElement","Link","Button","Textarea","Divider","Spinner","ArrowRightIcon","LockIcon","Search2Icon","Diary","myDiary","setDiary","message","setMessage","loading","setLoading","title","setTitle","searchQuery","setQuery","searchResults","setSearchResults","error","setError","name","navigate","monthNames","getDate","dateObj","Date","month","getMonth","h","getHours","m","getMinutes","day","String","padStart","year","getFullYear","zero","output","Open","t","getTitle","e","target","value","getMessage","Clear","Exit","Post","date","fetch","method","body","JSON","stringify","time","headers","then","response","json","status","Status","console","log","Diaries","diaries","i","length","curr","prevDiary","boxShadow","bgGradient","width","background","borderRadius","map","entry"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport { useNavigate,useParams } from \"react-router\";\nimport {\n    Flex,\n    Box,\n    Stack,\n    VStack,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    Button,\n    Textarea,\n    Divider,\n    Spinner\n} from \"@chakra-ui/react\";\n\nimport{\n    ArrowRightIcon,\n    LockIcon,\n    Search2Icon\n} from \"@chakra-ui/icons\"\n\nconst Diary=()=>{\n    // States\n    const [myDiary,setDiary] = useState([]);\n    const [message,setMessage] = useState(\"\");\n    const [loading,setLoading] = useState(\"none\");\n    const [title,setTitle]=useState(\"\");\n    const [searchQuery, setQuery] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [error,setError] = useState(\"\");\n    // Routing\n    const {name} = useParams();\n    const navigate = useNavigate();\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    \n    const getDate=()=>{\n        let dateObj = new Date();\n        let month = monthNames[dateObj.getMonth()];\n        let h = dateObj.getHours();\n        let m = dateObj.getMinutes();\n        let day = String(dateObj.getDate()).padStart(2, '0');\n        let year = dateObj.getFullYear();\n\n        let zero = \"\";\n        if(h==0)zero=\"0\"\n    \n        let output = month  + ' '+ day  + ',' + year+' '+zero+h+':'+m;\n        return output;\n    }\n\n\n    const Open=(t,m)=>{\n        setTitle(t);\n        setMessage(m);\n    }\n    \n    const getTitle=(e)=>{\n        setTitle(e.target.value);\n    }\n    const getMessage=(e)=>{\n        setMessage(e.target.value);\n    }\n\n    const Clear=()=>{\n        setMessage(\"\");\n    }\n\n    const Exit=()=>{\n        navigate('/');\n    }\n\n    \n    \n    const Post=(date)=>{  \n        setLoading(\"block\");  \n       \n\n        fetch(\n            `http://127.0.0.1:5000/new`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                name:name,\n                message:message,\n                title:title,\n                time: date,\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          ).then((response) => response.json())\n            .then((json) => {\n              let status = json.Status;\n              if(status==\"Successfully entered.\"){\n                  console.log(\"Submit: \",status);\n                \n              }\n              else{\n                setError(status);\n              }\n              setLoading(\"none\");  \n              \n            })\n            setLoading(\"none\"); \n    }\n\n    const Diaries=()=>{\n        \n        setLoading(\"block\");  \n        fetch(\n            `http://127.0.0.1:5000/diaries`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                name:name,\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          )\n            .then((response) => response.json())\n            .then((json) => {\n              let diaries = json.Diaries;\n              let i=0;\n              for(i=0;i<diaries.length;i++){\n                  let curr = diaries.length;\n                  setDiary(prevDiary => [...prevDiary,[diaries[i].time,diaries[i].title,diaries[i].message]]);\n                  while(diaries.length == curr);\n              }\n              \n            })\n            setLoading(\"none\");  \n    }\n\n    useEffect(() => {\n     \n        Diaries();\n     }, [myDiary]);\n\n    return(\n        <Flex \n          direction=\"column\"\n          w=\"full\"\n          align=\"center\"\n          justify=\"center\"\n          p={10}\n          bgGradient=\"linear(360deg, #232A33 ,black)\"\n        >\n\n            <Text\n             fontSize=\"5xl\"\n             textColor=\"white\"\n             my={10}\n            >\n                {name}'s Entry\n\n            </Text>\n            <Input \n             mt={10}\n             mb={5}\n             value={title}\n             fontSize=\"2xl\"\n             fontWeight=\"bold\"\n             textColor=\"#b1caf0\"\n             placeholder=\"Title...\"\n             onChange={getTitle}\n             w=\"full\"\n             h=\"8vh\"\n            />\n\n            <Textarea\n                w=\"full\"\n                h=\"60vh\"\n                bg=\"#292C2D\"\n                value={message}\n                focusBorderColor=\"#292C2D\"\n                border=\"none\"\n                _focus={{boxShadow:\"0px 5px 5px black\"}}\n                onChange={getMessage}\n                boxShadow=\"0px 5px 5px black\"\n                fontSize=\"2xl\"\n                textColor=\"white\"\n                p={10}\n                resize=\"none\"\n            />\n\n           <Flex\n            direction=\"row\"\n            bgGradient=\"linear(#676579,#01101a)\"\n            align=\"center\"\n            justify=\"space-evenly\"\n            boxShadow=\"0px 5px 5px black\"\n            w=\"45%\"\n            h=\"10vh\">\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(green.500,green.700)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(green.700,green.800)\"}}\n             onClick={()=>{Post(getDate())}}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"white\"\n                >\n                    Post\n                </Text>\n\n            </Button>\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(yellow.300,yellow.500)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(yellow,yellow.700)\"}}\n             onClick={Clear}\n             mx={3}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"black\"\n                >\n                    Clear\n                </Text>\n\n            </Button>\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(red.800,red.700)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(red.800,red.500)\"}}\n             onClick={Exit}\n             mx={3}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"black\"\n                >\n                    Exit\n                </Text>\n\n            </Button>\n        </Flex>\n\n        <Divider w=\"75%\" mt={10}/>\n\n        <Text \n         my={7}\n         fontSize=\"5xl\"\n         textColor=\"white\"\n        >\n            My Diary\n        </Text>\n\n        <VStack\n          spacing={6}\n          mt={10}\n          w=\"50%\"\n          h=\"50vh\"\n          overflowY=\"auto\"\n\n          css={{\n            '&::-webkit-scrollbar': {\n              width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n              width: '6px',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              background: \"#3888ff\",\n              borderRadius: '24px',\n            }}}\n\n        >\n            {\n                (loading==\"none\" && myDiary.map((entry)=> {return(\n                    <Box\n                     \n                     w=\"full\"\n                     h=\"20vh\"\n                     boxShadow=\"0px 2px 2px white\"\n                     textColor=\"white\"\n                     bgGradient=\"linear(to-r,#2a3545,black)\"\n                     p={10}\n                    >\n                        <Text \n                         fontSize=\"2xl\"\n                         >\n                             {entry[0]}\n                             <br/>\n                             {entry[1]}\n                         </Text>\n\n                         <Button\n                            w=\"15%\"\n                            bgGradient=\"linear(green.300,green.700)\"\n                             mt={2}\n                            _hover={{bgGradient:\"linear(green.700,green.800)\"}}\n                            onClick={()=>{Open(entry[1],entry[2])}}\n                        >\n                            <Text\n                            fontSize=\"lg\"\n                            textColor=\"white\"\n                            >\n                                Open\n                            </Text>\n\n                        </Button>   \n                    </Box>\n                )\n                \n            })\n            )\n            }\n                <Spinner\n                thickness='4px'\n                speed='0.65s'\n                emptyColor='gray.200'\n                color='blue.500'\n                size='xl'\n                display={loading}\n                />\n\n            \n\n        </VStack>\n\n\n        </Flex>\n    )\n}\n\nexport default Diary;"]},"metadata":{},"sourceType":"module"}