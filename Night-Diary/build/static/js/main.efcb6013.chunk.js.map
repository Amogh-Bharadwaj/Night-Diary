{"version":3,"sources":["logo.svg","entry.jsx","diary.jsx","App.js","reportWebVitals.js","index.js"],"names":["Entry","useState","name","setName","pass","setPass","error","setError","navigate","useNavigate","direction","w","h","align","bgColor","justify","bgGradient","spacing","textColor","fontSize","base","md","my","px","pointerEvents","children","color","focusBorderColor","onChange","e","target","value","placeholder","type","onClick","length","fetch","method","body","JSON","stringify","username","password","headers","then","response","json","status","Status","state","Name","_hover","boxShadow","_selected","bg","_active","mt","mb","Diary","myDiary","setDiary","message","setMessage","loading","setLoading","title","setTitle","useParams","monthNames","Diaries","diaries","useEffect","p","fontWeight","border","_focus","resize","date","dateObj","Date","month","getMonth","getHours","m","getMinutes","zero","String","getDate","padStart","getFullYear","time","console","log","mx","overflowY","css","width","background","borderRadius","map","entry","t","ml","thickness","speed","emptyColor","size","display","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efcb6013.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from \"react\"\nimport { useNavigate } from \"react-router\";\nimport {\n    Flex,\n    Stack,\n    VStack,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    Button\n} from \"@chakra-ui/react\";\n\nimport{\n    ArrowRightIcon,\n    LockIcon,\n} from \"@chakra-ui/icons\"\n\nconst Entry=()=>{\n    const [name,setName] = useState(\"\");\n    const [pass,setPass] = useState(\"\");\n    const [error,setError]= useState(\"\");\n    const navigate= useNavigate();\n\n    const getName=(e)=>{\n        setName(e.target.value);\n        //console.log(\"Name\",name);\n    }\n\n    const getPass=(e)=>{\n        setPass(e.target.value);\n        //console.log(\"Pass\",pass);\n    }\n\n    const Login=()=>{\n\n      // Sanity checks.\n      if(name.length==0){\n        setError(\"[ Please enter your name. ]\");\n      }\n      \n      else if(name.length > 50){\n        setError(\"[ Username too long. ]\")\n      }\n\n      else if(pass.length==0){\n        setError(\"[ Password cannot be empty. ]\")\n      }\n\n      else if(pass.length>100){\n        setError(\"[ Password size overflow. ]\")\n      }\n\n      else{\n        fetch(\n          `https://night-diary.herokuapp.com/entry`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              username:name,\n              password:pass,\n            }),\n            headers: {\n             \"Content-type\": \"application/json\",\n          },\n          }\n        )\n          .then((response) => response.json())\n          .then((json) => {\n            let status = json.Status;\n            if(status==\"Successfully entered.\" || status==\"New user account created.\"){\n              navigate('/diary/'+name,{state:{Name:name}});\n            }\n            else{\n              setError(status);\n            }\n            \n          })\n\n      }\n    }\n\n    return(\n        <Flex \n          direction=\"column\"\n          w=\"100vw\"\n          h=\"100vh\"\n          align=\"center\"\n          bgColor=\"black\"\n          justify=\"center\"\n          bgGradient=\"linear(360deg, #232A33 ,black)\"\n        >\n            <VStack\n              align=\"center\"\n              spacing={6}\n              h=\"full\"\n              justify=\"center\"\n              textColor=\"whiteAlpha.100\"\n            >   \n\n                <Text\n                  textColor=\"blue.400\"\n                  fontSize={{base:\"2xl\",md:\"4xl\"}}\n                  my={5}\n                >\n                    Night Diary\n                </Text>\n\n                <Text\n                  textColor=\"blue.200\"\n                  fontSize={{base:\"sm\",md:\"2xl\"}}\n                >\n                    Your own safe space to let it all out.\n                </Text>\n\n                \n                  <FormControl \n                   px={5}\n                   h=\"30%\">\n                        <InputGroup my={5}>\n                        <InputLeftElement\n                          pointerEvents=\"none\"\n                          children={<ArrowRightIcon color=\"white\"/>}\n                        />\n                          \n                        \n                        <Input \n                        focusBorderColor=\"white\"\n                          textColor=\"white\"\n                          onChange={getName}\n                          placeholder=\"Your name..\"></Input>\n                        \n                        </InputGroup>\n\n                        <InputGroup>\n                         <InputLeftElement \n                           pointerEvents=\"none\"\n                           children={<LockIcon color=\"white\"/>}\n                           />\n                           <Input \n                            type=\"password\"\n                            focusBorderColor=\"white\"\n                            textColor=\"white\"\n                            onChange={getPass}\n                            placeholder=\"Enter your password..\" />\n\n                       \n                        </InputGroup>\n\n                        <Button\n                          h=\"20%\"\n                          w=\"100%\"\n                          onClick={Login}\n                          bgColor=\"#093A53\"\n                          textColor=\"whiteAlpha.600\"\n                          _hover={{bgColor:\"#0C3E66\"}}\n                          boxShadow=\"0px 4px 4px #031A2D \"\n                          _selected={{bg:\"None\"}}\n                          _active={{bg:\"None\"}}\n                          mt={5}\n                          mb={7}\n                        >\n                            <Text fontSize=\"lg\">Enter</Text>\n  \n                        </Button>\n                </FormControl>\n\n                <Text \n                 textColor=\"red.700\"\n                 fontSize=\"2xl\"\n                >\n                  {error}\n                </Text>\n              \n                <Text\n                 mt={5}\n                 px={5}\n                 textColor=\"#B5E1F8\"\n                >This site can't see your password. <Link textColor=\"#67C1EF\">Learn more.</Link></Text>\n\n\n            </VStack>\n          \n\n        </Flex>\n    )\n}\n\nexport default Entry;\n","import React,{useState,useEffect} from \"react\"\nimport { useNavigate,useParams } from \"react-router\";\nimport {\n    Flex,\n    Box,\n    Stack,\n    VStack,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    Button,\n    Textarea,\n    Divider,\n    Spinner\n} from \"@chakra-ui/react\";\n\nimport{\n    ArrowRightIcon,\n    LockIcon,\n    Search2Icon\n} from \"@chakra-ui/icons\"\n\nconst Diary=()=>{\n    // States\n    const [myDiary,setDiary] = useState([]);\n    const [message,setMessage] = useState(\"\");\n    const [loading,setLoading] = useState(\"none\");\n    const [title,setTitle]=useState(\"\");\n    const [searchQuery, setQuery] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [error,setError] = useState(\"\");\n    // Routing\n    const {name} = useParams();\n    const navigate = useNavigate();\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    \n    const getDate=()=>{\n        let dateObj = new Date();\n        let month = monthNames[dateObj.getMonth()];\n        let h = dateObj.getHours();\n        let m = dateObj.getMinutes();\n        let day = String(dateObj.getDate()).padStart(2, '0');\n        let year = dateObj.getFullYear();\n\n        let zero = \"\";\n        if(h==0)zero=\"0\"\n    \n        let output = month  + ' '+ day  + ',' + year+' '+zero+h+':'+m;\n        return output;\n    }\n\n\n    const Open=(t,m)=>{\n        setTitle(t);\n        setMessage(m);\n    }\n    \n    const getTitle=(e)=>{\n        setTitle(e.target.value);\n    }\n    const getMessage=(e)=>{\n        setMessage(e.target.value);\n    }\n\n    const Clear=()=>{\n        setMessage(\"\");\n    }\n\n    const Exit=()=>{\n        navigate('/');\n    }\n   \n    const Delete=(time)=>{\n        fetch(\n            `https://night-diary.herokuapp.com/delete`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                time: time,\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          ).then((response) => response.json())\n            .then((json) => {\n              Diaries();\n            })\n\n    }\n    \n    \n    const Post=(date)=>{  \n        setLoading(\"block\");  \n       \n\n        fetch(\n            `https://night-diary.herokuapp.com/new`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                name:name,\n                message:message,\n                title:title,\n                time: date,\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          ).then((response) => response.json())\n            .then((json) => {\n              let status = json.Status;\n              if(status==\"Successfully entered.\"){\n                  console.log(\"Submit: \",status);\n                \n              }\n              else{\n                setError(status);\n              }\n              setLoading(\"none\");  \n              \n            })\n            setLoading(\"none\"); \n    }\n\n    const Diaries=()=>{\n        \n        setLoading(\"block\");  \n        fetch(\n            `https://night-diary.herokuapp.com/diaries`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                name:name,\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          )\n            .then((response) => response.json())\n            .then((json) => {\n              let diaries = json.Diaries;\n              let i=0;\n              setDiary(diaries);\n              \n            })\n            setLoading(\"none\");  \n    }\n\n    useEffect(() => {\n     \n        Diaries();\n     }, [myDiary]);\n\n    return(\n        <Flex \n          direction=\"column\"\n          w=\"full\"\n          align=\"center\"\n          justify=\"center\"\n          p={10}\n          bgGradient=\"linear(360deg, #232A33 ,black)\"\n        >\n\n            <Text\n             fontSize=\"5xl\"\n             textColor=\"white\"\n             my={10}\n            >\n                {name}'s Entry\n\n            </Text>\n            <Input \n             mt={10}\n             mb={5}\n             value={title}\n             fontSize=\"2xl\"\n             fontWeight=\"bold\"\n             textColor=\"#b1caf0\"\n             placeholder=\"Title...\"\n             onChange={getTitle}\n             w=\"full\"\n             h=\"8vh\"\n            />\n\n            <Textarea\n                w=\"full\"\n                h=\"60vh\"\n                bg=\"#292C2D\"\n                value={message}\n                focusBorderColor=\"#292C2D\"\n                border=\"none\"\n                _focus={{boxShadow:\"0px 5px 5px black\"}}\n                onChange={getMessage}\n                boxShadow=\"0px 5px 5px black\"\n                fontSize=\"2xl\"\n                textColor=\"white\"\n                p={10}\n                resize=\"none\"\n            />\n\n           <Flex\n            direction=\"row\"\n            bgGradient=\"linear(#676579,#01101a)\"\n            align=\"center\"\n            justify=\"space-evenly\"\n            boxShadow=\"0px 5px 5px black\"\n            w=\"45%\"\n            h=\"10vh\">\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(green.500,green.700)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(green.700,green.800)\"}}\n             onClick={()=>{Post(getDate())}}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"white\"\n                >\n                    Post\n                </Text>\n\n            </Button>\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(yellow.300,yellow.500)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(yellow,yellow.700)\"}}\n             onClick={Clear}\n             mx={3}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"black\"\n                >\n                    Clear\n                </Text>\n\n            </Button>\n\n            <Button\n             w=\"15%\"\n             bgGradient=\"linear(red.800,red.700)\"\n             boxShadow=\"0px 5px 5px black\" \n             _hover={{bgGradient:\"linear(red.800,red.500)\"}}\n             onClick={Exit}\n             mx={3}\n            >\n                <Text\n                fontSize=\"lg\"\n                textColor=\"black\"\n                >\n                    Exit\n                </Text>\n\n            </Button>\n        </Flex>\n\n        <Divider w=\"75%\" mt={10}/>\n\n        <Text \n         my={7}\n         fontSize=\"5xl\"\n         textColor=\"white\"\n        >\n            My Diary\n        </Text>\n\n        <VStack\n          spacing={6}\n          mt={10}\n          w=\"50%\"\n          h=\"50vh\"\n          overflowY=\"auto\"\n\n          css={{\n            '&::-webkit-scrollbar': {\n              width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n              width: '6px',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              background: \"#3888ff\",\n              borderRadius: '24px',\n            }}}\n\n        >\n            {\n                (loading==\"none\" && myDiary.map((entry)=> {return(\n                    <Box\n                     \n                     w=\"full\"\n                     h=\"25vh\"\n                     boxShadow=\"0px 2px 2px white\"\n                     textColor=\"white\"\n                     bgGradient=\"linear(to-r,#2a3545,black)\"\n                     p={10}\n                    >\n                        <Text \n                         fontSize=\"2xl\"\n                         >\n                             {entry.time}\n                             <br/>\n                             {entry.title}\n                         </Text>\n\n                         <Button\n                            w=\"15%\"\n                            \n                            bgGradient=\"linear(green.300,green.700)\"\n                             mt={2}\n                            _hover={{bgGradient:\"linear(green.700,green.800)\"}}\n                            onClick={()=>{Open(entry.title,entry.message)}}\n                        >\n                            <Text\n                            fontSize=\"lg\"\n                            textColor=\"white\"\n                            >\n                                Open\n                            </Text>\n\n                        </Button>   \n\n                        <Button\n                            w=\"15%\"\n                            bgGradient=\"linear(red.300,red.700)\"\n                             mt={2}\n                             ml={4}\n                            _hover={{bgGradient:\"linear(red.700,red.800)\"}}\n                            onClick={()=>{Delete(entry.time)}}\n                        >\n                            <Text\n                            fontSize=\"lg\"\n                            textColor=\"white\"\n                            >\n                                Delete\n                            </Text>\n\n                        </Button>   \n                    </Box>\n                )\n                \n            })\n            )\n            }\n                <Spinner\n                thickness='4px'\n                speed='0.65s'\n                emptyColor='gray.200'\n                color='blue.500'\n                size='xl'\n                display={loading}\n                />\n\n            \n\n        </VStack>\n\n\n        </Flex>\n    )\n}\n\nexport default Diary;\n","import React from \"react\"\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Entry from \"./entry\"\nimport Diary from \"./diary\";\n\n\nconst App=()=>{\n  return (\n    <Router>\n      <ChakraProvider>\n        <Routes>\n          <Route path=\"/\" element={<Entry/>}/>\n          <Route path=\"/diary/:name\" element={<Diary/>}/>\n         \n        </Routes>\n        \n      </ChakraProvider>\n\n    </Router>\n     \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}